@model CoOpHub.ViewModels.CoopsViewModel

@{
	ViewBag.Title = "Home Page";
}

<h1>@Model.Heading</h1>

<!-- Search form -->
@using (Html.BeginForm("Search", "Coops"))
{
	<div class="form-group">
		<div id="searchCoops" class="input-group">
			@Html.TextBoxFor(m => m.SearchTerm, new { @class = "form-control", placeholder = "Search by Host, Game, Genre, or Location..." })
			<span class="input-group-addon">
				<i class="glyphicon glyphicon-search"></i>
			</span>
		</div>
	</div>
}

<!-- List of upcoming co-op sessions -->
<ul id="coops" class="coops voffset4">
	@foreach (var coop in Model.UpcomingCoops)
	{
		<li>
			<div class="date">
				<div class="month">
					@coop.DateTime.ToString("MMM")
				</div>
				<div class="day">
					@coop.DateTime.ToString("d ")
				</div>
			</div>
			<div class="details">
				<span class="host">
					<a href="@Url.Action("Details", "Coops", new { id = coop.Id })">
						@coop.Host.Name
					</a>

					<!-- If co-op session is canceled, let the user know -->
					@if (coop.IsCanceled)
					{
						<span class="label label-warning">Canceled</span>
					}
				</span>
				<span class="game">
					@coop.Game.Name
				</span>
				<span class="genre">
					@coop.Game.Genre.Name
				</span>
				@if (Model.ShowActions && !coop.IsCanceled)
				{
				<button data-coop-id="@coop.Id"
						class="btn
								@(Model.Attendances.Contains(coop.Id) ? "btn-info" : "btn-default")
								btn-sm js-toggle-attendance"
						>@(Model.Attendances.Contains(coop.Id) ? "Going" : "Going?")</button>
				}

			</div>
		</li>
	}
</ul>

@section scripts
{
	<script>
		$(document).ready(function () {
			// Initialize the coops controller .js object
			CoopsController.init("#coops"); // *NOTE: when we call the .init() function, we pass a selector to provide a reference to the current DOM
		});
	</script>
}